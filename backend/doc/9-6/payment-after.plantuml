@startuml Payment Class Diagram
skinparam linetype ortho

interface BachelorCardData {
    String name
    String cardNumber
    String securityCode
    String expirationDate
}

interface SwpSafeData {
    String swpCode
}

interface HciPalData {
    String accountName
    String accountPassword
}

abstract PaymentService {
    + Promise<{ Number status, String message }> getCountryCode(BachelorCardData | SwpSafeData | HciPalData dataObject)
    + Promise<{ Number status, String message }> initTransaction(BachelorCardData | SwpSafeData | HciPalData dataObject, Number amount)
    + Promise<{ Number status, String message }> commitTransaction(String token)
    + Promise<{ Number status, String message }> rollbackTransaction(String token)
    - Promise<{status: number, message: string}> processResponse(String data, String fieldWanted)
}

entity Frontend

class BachelorCard

class HciPal

class SwpSafe

class Scooter

class Rental

class Reservation

class Database {
    Sequelize sequelize

    + Sequelize getSequelize()
    + connect()
}

class PaymentController {
    + Promise<void> getAllPaymentMethods(Request request, Response response)
    + Promise<void> addBachelorCard(Request request, Response response)
    + Promise<void> addHciPal(Request request, Response response)
    + Promise<void> addSwpSafe(Request request, Response response)
    + Promise<void> deletePayment(Request request, Response response)
}

class CheckoutController {
    + Promise<void> processCheckout(Request request, Response response)
}

class RentalManager {
    + Promise<Model> startRental(Number userId, Number scooterId, Number duration)
    + Promise<void> endRental(Rental rental)
}

class ReservationManager {
    + Promise<Model> startReservation(Number userId, Number scooterId)
    + Promise<void> endReservation(Reservation reservation)
}

class PaymentMethod

PaymentService <|-- BachelorCard : implements
PaymentService <|-- HciPal : implements
PaymentService <|-- SwpSafe : implements

PaymentController -u-> BachelorCard : uses
PaymentController -u-> HciPal : uses
PaymentController -u-> SwpSafe : uses
PaymentController -d-> Database : queries
PaymentController -l-> PaymentMethod : manages instances of

CheckoutController -l-> Database : queries
CheckoutController -d-> RentalManager : use
CheckoutController -u-> ReservationManager : use
CheckoutController -u-> PaymentController : use

HciPal -l-> HciPalData : use
BachelorCard -l-> BachelorCardData : use
SwpSafe -l-> SwpSafeData : use

RentalManager -u-> Scooter : manages instances of
RentalManager -u-> Reservation : manages instances of
RentalManager -u-> Rental : manages instances of

ReservationManager -d-> Scooter : manages instances of
ReservationManager -d-> Reservation : manages instances of
ReservationManager -d-> Rental : manages instances of

Frontend <-u-> CheckoutController : communicate
Frontend <-u-> PaymentController : communicate

@enduml